<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:toolbars="clr-namespace:Gemini.Framework.ToolBars"
					xmlns:converters="clr-namespace:Gemini.Modules.MainMenu.Converters">

    <converters:StringToApplicationResourceConverter x:Key="ApplicationResourceConverter"/>
    <Path x:Key="ToolBarButtonImage" Stretch="Fill"
          Fill="{Binding PathDataForegroundName,Converter={StaticResource ApplicationResourceConverter}}"
          x:Shared="false"
          Data="{Binding PathData,Mode=OneWay}" >
        <Path.Style>
            <Style TargetType="Path">
                <Setter Property="Width" Value="16" />
                <Setter Property="Height" Value="16" />
                <Setter Property="Stretch" Value="Fill" />
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="0.5" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Path.Style>
    </Path>
        <StackPanel x:Key="IconAndTextTemplate" x:Shared="False" Orientation="Horizontal">
        <ContentControl Content="{StaticResource ToolBarButtonImage}" />
        <TextBlock Text="{Binding Text}" Margin="5 0 0 0" />
    </StackPanel>

    <Style x:Key="ToolBarButton" TargetType="{x:Type ToggleButton}" 
		   BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}">
		<Setter Property="Content" Value="{StaticResource ToolBarButtonImage}" />
        <Setter Property="ToolTip" Value="{Binding ToolTip}" />
        <Setter Property="ToolTipService.IsEnabled" Value="{Binding HasToolTip}" />
		<Setter Property="IsChecked" Value="{Binding IsChecked, Mode=OneWay}" />
        <Setter Property="Visibility" Value="{Binding Visibility, Mode=OneWay}" />
        <Setter Property="Command" Value="{Binding Command}" />
        <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource Self}}" />

        <Style.Triggers>
            <DataTrigger Binding="{Binding Display}" Value="{x:Static toolbars:ToolBarItemDisplay.IconAndText}">
                <Setter Property="Content" Value="{StaticResource IconAndTextTemplate}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
